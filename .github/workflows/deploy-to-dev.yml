# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
# For more information regarding posting announcements to MS Teams see: https://github.com/marketplace/actions/microsoft-teams-notification

name: Deploy to MNbenefits DEV

on:
  workflow_run:
    workflows: ["Run tests"]
    branches: [Deploy-to-DEV-redesign-test]
    types:
      - completed
  workflow_dispatch:
    inputs: { }
jobs:
           
  mnitdeploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: deploy to MNbenefits DEV
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate and set context for non-prod
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_NON_PROD }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN_NON_PROD }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE_NON_PROD }}
      - name: update and run build
        run: |
          oc start-build mn-benefits --follow > build-log.txt 2>&1
          id:build
          
      - name: Upload Failure Logs
#        if: failure() && steps.build.outcome =='failure'
        if: always()
        uses: actions/upload-artifact@v2
        with: 
         name: build logs
         path: build-log.txt 
          
  merge_to_staging:
    needs: mnitdeploy
   # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Merge main -> staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          ref: main
      - uses: MaximeHeckel/github-action-merge-fast-forward@v1.1.1
        with:
          branchtomerge: main
          branch: staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          id: merge
          
      - name: Upload Failure Logs
        if: failure() && steps.merge.outcome =='failure'
        uses: actions/upload-artifact@v2
        with: 
         name: merge-to-staging -failure-logs
         path: path/to/your/logs  
                 
  evaluate_workflow:
    needs: [mnitdeploy, merge_to_staging]  
    name: evaluate workflow
    runs-on: ubuntu-latest
    if: |
      always() 
#      (needs.mnitdeploy.result == 'skipped' || needs.merge_to_staging == 'skipped')
    steps:
      - name: Generate Report
        run: |
         echo "Report:" > report.md
         echo "Deployment Outcome: ${{needs.mnitdeploy.result}}"  >> report.md
         echo "Merge Outcome: ${{needs.merge-to-staging.result}}" >>report.md
       
      - name: Upload Report as Arrtifact
        uses: actions/upload-artifacts @v2
        with:
          name: workflow-report
          path: report.md
          
      - name: Announce On Teams
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ github.token }} # this will use the runner's token.
          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          notification-summary: MNbenefits Workflow Execution report! 
          notification-color: '0078D7'
          timezone: America/Chicago
          message: |
           Workflow completed. See the report for details:
           [Workflow Report(https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}/artifacts)
           [Deployment Logs](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}/artifacts)
           [Merge logs](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}/artifacts)
            
