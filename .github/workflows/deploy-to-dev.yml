name: Deploy to MNbenefits DEV

on:
  workflow_run:
    workflows: ["Run tests"]
    branches: [DeplottoDEV_refinement_test]
    types: [completed]
  workflow_dispatch:

env:
  TIMEZONE: 'America/Chicago'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MS_TEAMS_WEBHOOK_URI: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}

jobs:
  check_tests:
    runs-on: ubuntu-latest
    outputs:
      tests_passed: ${{ steps.test_outcome.outputs.tests_passed }}
    steps:
      - name: Determine if tests passed
        id: test_outcome
        #run: echo "::set-output name=tests_passed::${{ github.event.workflow_run.conclusion == 'success' }}"
        run: echo "{test_outcome}={{{ steps.test_outcome.outputs.tests_passed }}}" >> $GITHUB_OUTPUT

  mintdeploy:
    needs: check_tests
    if: ${{ needs.check_tests.outputs.tests_passed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate and set context for non-prod
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_NON_PROD }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN_NON_PROD }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE_NON_PROD }}
      - name: update and run build
        run: |
          oc start-build mn-benefits --follow    
  announce:
    needs: [check_tests, mintdeploy]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
       - name: Announce 
         uses: actions/checkout@v2
       - name: Send notification based on outcome
         uses: jdccargile/ms-teams-notification@v1.3
         with: 
          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          notification-summary: >
            ${{ needs.check_tests.outputs.tests_passed == 'false' && 'Tests failed, deployment aborted.' ||
                needs.mintdeploy.result == 'failure' && 'Deployment to MNbenefits DEV failed.' ||
                'Deployment to MNbenefits DEV succeeded.' }}
          notification-color: >
            ${{ (needs.check_tests.outputs.tests_passed == 'false' || needs.mintdeploy.result == 'failure') && 'ff0000' || '00ff00' }}
          timezone: ${{ env.TIMEZONE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  merge_to_staging:
    needs: announce
    if: ${{ needs.announce.result == 'success' && needs.mintdeploy.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          ref: main
      - name: Merge main -> staging 
        uses: MaximeHeckel/github-action-merge-fast-forward@v1.1.1
        with:
          branchtomerge: main
          branch: staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     

  evaluate_workflow:
    needs: [announce, merge_to_staging]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Evaluate overall workflow success
        #id: eval
        uses: actions/github-script@v7
        with:
          script: |
            const announceResult = '${{ needs.announce.result }}';
            const mergeResult = '${{ needs.merge_to_staging.result }}';
            if (announceResult === 'failure' || mergeResult === 'failure') {
              core.setFailed('Workflow failed.');
            }
            if (announceResult === 'success' && mergeResult === 'success') {
              console.log('Workflow succeeded.');
            }
