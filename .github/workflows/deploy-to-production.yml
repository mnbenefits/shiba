name: Deploy to production

on:
  workflow_dispatch:
    inputs: {}
jobs:
  # Deploy to prod steps:
  # 1. find latest git release
  # 2. Set release in sentry
  # 3. Login to openshift prod
  # 4. Import image tagged with the git release tag from non-prod to prod
  # 5. Rollout updated image
  mnitdeploy:
    name: deploy to MNbenefits PROD
    runs-on: ubuntu-22.04
    steps:
    - name: Fetch Latest Release
      id: fetch-latest-release
      uses: thebritican/fetch-latest-release@v2.0.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v5
      with:
        ref: ${{ steps.fetch-latest-release.outputs.tag_name }}
    - name: Create Sentry release
      uses: getsentry/action-release@v3.2.0
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: mnbenefits
        SENTRY_PROJECT: shiba
      with:
        environment: production
        release: ${{ steps.fetch-latest-release.outputs.tag_name }}
    - name: Authenticate and set context for prod
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_PROD }}
        openshift_token: "eyJhbGciOiJSUzI1NiIsImtpZCI6IkhSV3k5b0lwemNGRVU4b3prMUJDMnRtM2J0T0lXTzZZYVNYSm13RzB3Zm8ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtbi1iZW5lZml0cy1wcm9kIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1uYmVuZWZpdHMtZGVwbG95LXNlY3JldCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJtbmJlbmVmaXRzLWRlcGxveS1zYSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjNmYzEyNjNjLTEzNzctNGI5YS1hNWYxLTEwZDhjYzJkYTMxYiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptbi1iZW5lZml0cy1wcm9kOm1uYmVuZWZpdHMtZGVwbG95LXNhIn0.B7XqG0Wc8r-0claugseWSBJtDto8NYvCkXeOADyJ2ejUEr9lnCOe8dUkwFRkczVtJGAlu9IOO_mNA77-BdzJs3hmZuq6FWmgge04qRlMDH8w1OVerxLIXCS7J-cswqDHLO3nsneldvUP-wEUvYO8zRosnUl_BbrNKBhfnUvGME5orb57ud0yFHTm_GNEU6RoSdvD1XSaLCyu-JQZKBDLnIklx686exeA3g-LGxBo_2fNfLtkagEXrdO_lEr5OtVWsJnEueXUzQT_6J9SExOc7Bpabho4DdASRdGq0kPe48mXRKA44MIV4XETsbdWUGxERnA-KQSq8mtCqwyXuvD-KQ"
        namespace: ${{ secrets.OPENSHIFT_NAMESPACE_PROD }}
    - name: import and deploy to prod
      run: |
        oc import-image mn-benefits:${{ steps.fetch-latest-release.outputs.tag_name }} --from=${{ secrets.OPENSHIFT_IMAGE_LOCATION }}/mn-benefits:${{ steps.fetch-latest-release.outputs.tag_name }} --confirm -n ${{ secrets.OPENSHIFT_NAMESPACE_PROD }}
        # These commands are changed with the migration from DeploymentConfig to Deployment
        # Replace these commands:
        # oc patch dc mn-benefits-prod -p '{"spec":{"triggers":[{"type": "ImageChange", "imageChangeParams":{"from":{"name":"mn-benefits:${{ steps.fetch-latest-release.outputs.tag_name }}"}, "containerNames":["mn-benefits-prod"]}}]}}'
        # oc rollout latest dc/mn-benefits-prod
        # with commands that will go something like this...
        oc rollout pause deployment mnbenefits-prod-deployment
        oc patch deployment mnbenefits-prod-deployment --namespace mn-benefits-prod -p '{"spec":{"template":{"spec":{"containers":[{"name":"mnbenefits-prod-container","image":"image-registry.openshift-image-registry.svc:5000/mn-benefits-prod/mn-benefits:${{ steps.fetch-latest-release.outputs.tag_name }}"}]}}}}'
        oc rollout resume deployment mnbenefits-prod-deployment
    - name: Announce success on Teams
      if: ${{ job.status == 'success' }}
      uses: jdcargile/ms-teams-notification@v1.4
      with:
        github-token: ${{ github.token }} # this will use the runner's token.
        ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        notification-summary: Deploy to MNbenefits Production succeeded, status - ${{ job.status }}
        # color is green
        notification-color: 008000
        timezone: America/Chicago          
    - name: Announce fail on Teams
      if: ${{ job.status != 'success' }}
      uses: jdcargile/ms-teams-notification@v1.4
      with:
        github-token: ${{ github.token }} # this will use the runner's token.
        ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        notification-summary: Deploy to MNbenefits Production failed, status - ${{ job.status }}
        # color is red
        notification-color: ff0000
        timezone: America/Chicago          
        
